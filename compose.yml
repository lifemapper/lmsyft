version: "3.9"
services:

  analyst:
    build:
      context: ./.
      target: flask
    networks:
      - nginx
    environment:
      - FLASK_APP=flask_app.analyst.routes:app
    env_file:
      ./.env.analyst.conf
    restart: unless-stopped
    volumes:
      # bind mount
      - /home/ubuntu/aws_data:/volumes/aws_data:ro
      # volumes
      - "scratch-path:/scratch-path"
      - "webpack-output:/volumes/webpack-output"
      - "static-files:/home/specify/span/frontend/static"

  broker:
    build:
      context: ./.
      target: flask
    networks:
      - nginx
    environment:
      - FLASK_APP=flask_app.broker.routes:app
    env_file:
      ./.env.broker.conf
    restart: unless-stopped
    volumes:
      - "scratch-path:/scratch-path"
      - "webpack-output:/volumes/webpack-output"
      - "static-files:/home/specify/span/frontend/static"

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - broker
      - analyst
      - front-end

    networks:
      - nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "static-files:/volumes/static-files:ro"
      - "webpack-output:/volumes/webpack-output:ro"
      # bind mounts from host machine
      - "/etc/letsencrypt:/etc/letsencrypt:ro"
      - "./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./span/frontend/static/:/var/www/:ro"

  front-end:
    build:
      context: ./.
      target: front-end
    volumes:
      - "webpack-output:/home/node/dist"

volumes:
  scratch-path:
  static-files:
  webpack-output:

networks:
  nginx:
